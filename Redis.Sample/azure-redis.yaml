apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-app
  template:
    metadata:
      labels:
        app: redis-app
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: redis-app
        image: mcr.microsoft.com/oss/bitnami/redis:6.0.8
        env:
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi
        ports:
        - containerPort: 6379
          name: redis
---
apiVersion: v1
kind: Service
metadata:
  name: redis-app
spec:
  ports:
  - port: 6379
  selector:
    app: redis-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: appprofile
spec:
  replicas: 1
  selector:
    matchLabels:
      app: appprofile
  template:
    metadata:
      labels:
        app: appprofile
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: appprofile
        image: laravelseadocker/redisapp
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi
        ports:
        - containerPort: 80
        env:
        - name: RedisConnection
          value: "redis-app:6379,user=default,password=123456,ssl=False,abortConnect=False"
---
apiVersion: v1
kind: Service
metadata:
  name: appprofile
spec:
  type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: appprofile